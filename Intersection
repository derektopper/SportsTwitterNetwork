#Java
#This allows for the comparison of two .txt files and returns the number of common numbers.
#This is used for determining the number of followers in common between two Twitter accounts.

import java.io.IOException;
import java.util.ArrayList;


public class Intersection
{
    static String[] fileNames = new String[] { "angelsMLB.txt", "astrosMLB.txt", "athleticsMLB.txt", "bullsNBA.txt", "padresMLB.txt", "warriorsNBA.txt", "nationalsMLB.txt", "yankeesMLB.txt", "ramsNFL.txt", "bluesNHL.txt", "cardinalsMLB.txt"};


    /**
     * @param args
     * @throws IOException
     */
    public static void main( String[] args ) throws IOException
    {
        Long startTime = System.currentTimeMillis();
        long[][] IDs = new long[fileNames.length][];

        for ( int i = 0; i < fileNames.length; i++ )
        {
            IDs[i] = ReadFile.read( fileNames[i] );
        }

        for ( int x = 0; x < fileNames.length; x++ )
        {
            for ( int y = x + 1; y < fileNames.length; y++ )
            {
                long[] result = diff( IDs[x], IDs[y] );
                System.out.println( fileNames[x] + " " + fileNames[y] + " " + result.length );
            }
        }

        // long[] a = new long[] { 1, 2, 3, 4, 5 };
        // long[] b = new long[] { 3, 4, 5, 6, 7, 8 };
        // long[] result = diff( a, b );
        // for ( long l : result )
        // {
        // System.out.println( l );
        // }

        // for ( long l : result )
        // {
        // System.out.println( l );
        // }
        System.out.println( "Execution took " + ( System.currentTimeMillis() - startTime ) + " milliseconds" );

    }


    public static long[] diff( String a, String b ) throws IOException
    {
        return diff( ReadFile.read( a ), ReadFile.read( b ) );
    }


    // assumes that a, b are sorted
    public static long[] diff( long[] a, long[] b )
    {
        int index_a = 0;
        int index_b = 0;

        ArrayList<Long> results = new ArrayList<Long>();
        while ( true )
        {
            if ( index_b == b.length || index_a == a.length )
            {
                return toArray( results );
            }
            else if ( a[index_a] > b[index_b] )
            {
                index_b++;
            }
            else if ( a[index_a] < b[index_b] )
            {
                index_a++;
            }
            else if ( a[index_a] == b[index_b] )
            {
                results.add( a[index_a] );
                index_a++;
                index_b++;
            }
        }
    }


    private static long[] toArray( ArrayList<Long> data )
    {
        long[] result = new long[data.size()];
        for ( int i = 0; i < data.size(); i++ )
        {
            result[i] = data.get( i );
        }
        return result;
    }
}
